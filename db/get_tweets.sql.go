// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: get_tweets.sql

package db

import (
	"context"
)

const getTweets = `-- name: GetTweets :many
SELECT id, user_id, text, created_at FROM tweets WHERE user_id = $1
ORDER BY created_at DESC
LIMIT $2 OFFSET $3
`

type GetTweetsParams struct {
	UserID int32
	Limit  int32
	Offset int32
}

func (q *Queries) GetTweets(ctx context.Context, arg GetTweetsParams) ([]Tweet, error) {
	rows, err := q.db.QueryContext(ctx, getTweets, arg.UserID, arg.Limit, arg.Offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Tweet
	for rows.Next() {
		var i Tweet
		if err := rows.Scan(
			&i.ID,
			&i.UserID,
			&i.Text,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
